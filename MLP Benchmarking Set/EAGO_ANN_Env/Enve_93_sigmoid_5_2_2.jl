using JuMP, EAGO

                     m = Model()

                     EAGO.register_eago_operators!(m)

                     @variable(m, -1 <= x[i=1:5] <= 1)

                     @variable(m, -8.835331761999926 <= q <= 6.5839374652864455)

                     add_NL_constraint(m, :(sigmoid(-0.3254411093045606 + -0.7319141007210423*sigmoid(0.8233205060219215 + 0.61604769469856*$(x[1]) + 0.10727729979547229*$(x[2]) + 0.3094858143875636*$(x[3]) + -0.42732359189198776*$(x[4]) + -0.08086357719902404*$(x[5])) + -0.9243300558919976*sigmoid(-0.028977566498362695 + -0.7485727955604142*$(x[1]) + 0.28608592599505744*$(x[2]) + 0.7055048271635402*$(x[3]) + -0.971227308997133*$(x[4]) + 0.46626950723684146*$(x[5]))) + sigmoid(0.37750759349215857 + -0.7027504401903863*sigmoid(0.8233205060219215 + 0.61604769469856*$(x[1]) + 0.10727729979547229*$(x[2]) + 0.3094858143875636*$(x[3]) + -0.42732359189198776*$(x[4]) + -0.08086357719902404*$(x[5])) + 0.8061316125975573*sigmoid(-0.028977566498362695 + -0.7485727955604142*$(x[1]) + 0.28608592599505744*$(x[2]) + 0.7055048271635402*$(x[3]) + -0.971227308997133*$(x[4]) + 0.46626950723684146*$(x[5]))) - $q <= 0.0))

                     @NLobjective(m, Min, q)

                     return m

                    