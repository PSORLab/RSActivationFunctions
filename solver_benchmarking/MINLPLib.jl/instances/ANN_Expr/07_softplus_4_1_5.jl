using JuMP, EAGO

                     m = Model()

                     EAGO.register_eago_operators!(m)

                     @variable(m, -1 <= x[i=1:4] <= 1)

                     @variable(m, -10.727396450032298 <= q <= 10.341307641992039)

                     add_NL_constraint(m, :(log(1 + exp(-0.7594921333542755 + 0.29083593057294754*$(x[1]) + -0.853464816888847*$(x[2]) + 0.355548149730335*$(x[3]) + -0.9799338681626466*$(x[4]))) + log(1 + exp(0.7967948470186679 + 0.4125187490566202*$(x[1]) + -0.07888951328395777*$(x[2]) + 0.5307209485984372*$(x[3]) + -0.6243253014424854*$(x[4]))) + log(1 + exp(0.5596303002912069 + 0.036981069983024195*$(x[1]) + -0.36792399865103764*$(x[2]) + 0.8775927268629178*$(x[3]) + -0.988765970566825*$(x[4]))) + log(1 + exp(-0.4093924155176669 + 0.2071206814621389*$(x[1]) + -0.48217712463878026*$(x[2]) + -0.6673158871950284*$(x[3]) + -0.9659564229118476*$(x[4]))) + log(1 + exp(-0.38058500245806215 + 0.5074069251520332*$(x[1]) + 0.613305475914625*$(x[2]) + -0.0940610867820495*$(x[3]) + 0.5995073981555823*$(x[4]))) - $q <= 0.0))

                     @objective(m, Min, q)

                     return m

                    