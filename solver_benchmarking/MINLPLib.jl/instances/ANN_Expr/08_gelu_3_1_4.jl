using JuMP, EAGO

                     m = Model()

                     EAGO.register_eago_operators!(m)

                     @variable(m, -1 <= x[i=1:3] <= 1)

                     @variable(m, -5.332774675925122 <= q <= 6.4153373403467775)

                     add_NL_constraint(m, :((0.1742606373223392 + -0.05222015296022331*$(x[1]) + 0.15266538164806986*$(x[2]) + 0.27567618482533085*$(x[3]))*(1 + erf((0.1742606373223392 + -0.05222015296022331*$(x[1]) + 0.15266538164806986*$(x[2]) + 0.27567618482533085*$(x[3]))/sqrt(2)))/2 + (0.7992746561529409 + 0.8053279528303205*$(x[1]) + -0.8864483595131469*$(x[2]) + 0.6110618799366847*$(x[3]))*(1 + erf((0.7992746561529409 + 0.8053279528303205*$(x[1]) + -0.8864483595131469*$(x[2]) + 0.6110618799366847*$(x[3]))/sqrt(2)))/2 + (-0.6752579159956698 + 0.27352401436271423*$(x[1]) + 0.2855995340868476*$(x[2]) + -0.33283297885270313*$(x[3]))*(1 + erf((-0.6752579159956698 + 0.27352401436271423*$(x[1]) + 0.2855995340868476*$(x[2]) + -0.33283297885270313*$(x[3]))/sqrt(2)))/2 + (0.2430039547312175 + -0.8377319978555251*$(x[1]) + 0.39266174748446403*$(x[2]) + -0.9683058237799194*$(x[3]))*(1 + erf((0.2430039547312175 + -0.8377319978555251*$(x[1]) + 0.39266174748446403*$(x[2]) + -0.9683058237799194*$(x[3]))/sqrt(2)))/2 - $q <= 0.0))

                     @objective(m, Min, q)

                     return m

                    