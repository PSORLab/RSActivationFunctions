using JuMP, EAGO

                     m = Model()

                     EAGO.register_eago_operators!(m)

                     @variable(m, -1 <= x[i=1:5] <= 1)

                     @variable(m, -6.488824413359986 <= q <= 6.729439090743391)

                     add_NL_constraint(m, :(1/(1 + exp(-(0.6442211513786371 + 0.6060607309092267*1/(1 + exp(-(-0.25461520796754256 + 0.8980721543089638*$(x[1]) + 0.9381266822727681*$(x[2]) + -0.8446276014249228*$(x[3]) + -0.43741343386290765*$(x[4]) + 0.17400967344335916*$(x[5])))) + -0.2689278778257371*1/(1 + exp(-(-0.32405265497274005 + 0.7689511041538082*$(x[1]) + 0.7170113596676764*$(x[2]) + -0.7954301950243226*$(x[3]) + 0.3706953387574874*$(x[4]) + -0.13209825476725356*$(x[5]))))))) + 1/(1 + exp(-(-0.8503398678327141 + -0.43763464280202813*1/(1 + exp(-(-0.25461520796754256 + 0.8980721543089638*$(x[1]) + 0.9381266822727681*$(x[2]) + -0.8446276014249228*$(x[3]) + -0.43741343386290765*$(x[4]) + 0.17400967344335916*$(x[5])))) + -0.8707322759459402*1/(1 + exp(-(-0.32405265497274005 + 0.7689511041538082*$(x[1]) + 0.7170113596676764*$(x[2]) + -0.7954301950243226*$(x[3]) + 0.3706953387574874*$(x[4]) + -0.13209825476725356*$(x[5]))))))) - $q <= 0.0))

                     @objective(m, Min, q)

                     return m

                    